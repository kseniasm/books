{"version":3,"sources":["components/NavBar.js","api/googleBooks.js","store/actions/booksActions.js","store/actions/asyncActions.js","store/actions/actionTypes.js","components/SearchBar.js","components/Header.js","components/BookItem.js","components/Loading.js","components/Pages.js","components/BooksList.js","components/Home.js","components/Favorites.js","components/NotFound.js","components/Toastr.js","components/BookDetails.js","components/App.js","serviceWorker.js","store/reducers/paginationReducer.js","store/reducers/reducers.js","store/reducers/booksReducer.js","store/reducers/asyncReducers.js","store/reducers/searchReducer.js","index.js"],"names":["NavBar","Navbar","collapseOnSelect","expand","className","Container","Brand","as","NavLink","to","icon","faBookOpen","Toggle","aria-controls","Collapse","id","Nav","Link","style","color","axios","create","baseURL","fetchBooks","title","firstBookIndex","dispatch","getState","a","pagination","booksPerPage","totalBooks","type","googleBooks","get","response","data","items","Error","payload","numOfBooks","totalItems","SearchBar","state","term","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","props","findBooks","this","Form","onSubmit","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","autoComplete","Append","Button","variant","faSearch","React","Component","connect","books","searchTerm","Header","Row","Col","md","lg","xs","BookItem","book","Card","height","backgroundColor","Img","src","volumeInfo","imageLinks","thumbnail","Body","overflow","authors","Loading","Spinner","animation","Pages","pageNumber","nextBookIndex","fetchNextBooks","setPageNumbers","totalPages","currentPage","numberOfPages","pageNumbers","Math","floor","i","push","ceil","Pagination","Prev","disabled","onClick","map","number","Item","key","Next","BooksList","loading","xl","page","Home","Favorites","componentDidMount","Object","entries","JSON","parse","localStorage","getItem","removeFromFavorites","setItem","stringify","length","faTimes","NotFound","marginTop","fontSize","Toastr","text","show","handleToastrClose","aria-live","aria-atomic","position","minHeight","Toast","bottom","right","onClose","delay","autohide","BookDetails","error","showToastr","fetchBook","saveToFavorites","keys","includes","renderAuthors","authorsList","forEach","author","substring","mb","sm","marginBottom","width","Title","float","marginRight","faStar","Text","fontWeight","publishedDate","description","ownProps","currentBook","match","params","App","path","component","Boolean","window","location","hostname","initialState","combineReducers","action","assign","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.951888ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./App.css\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" className=\"nav\">\r\n      <Container>\r\n        <Navbar.Brand as={NavLink} to=\"/\">\r\n          <FontAwesomeIcon className=\"brand-logo\" icon={faBookOpen} />\r\n          <span className=\"brand-name\">Books</span>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <Nav.Link  as={NavLink}  to=\"/favorites\" >Favorites</Nav.Link> */}\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link\r\n              as={NavLink}\r\n              to=\"/favorites\"\r\n              className=\"nav-text\"\r\n              style={{ color: \"#7fcd91\" }}\r\n            >\r\n              Favorites\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://www.googleapis.com/books/v1'\r\n});","import { FETCH_BOOKS, UPDATE_PAGENATION, FETCH_BOOK, UPDATE_SEARCH } from \"./actionTypes\";\r\nimport googleBooks from \"../../api/googleBooks\";\r\nimport {\r\n  asyncActionStart,\r\n  asyncActionFinish,\r\n  asyncActionError\r\n} from \"./asyncActions\";\r\n\r\nexport const fetchBook = id => async dispatch => {\r\n  try {\r\n    dispatch(asyncActionStart());\r\n    const response = await googleBooks.get(`/volumes/${id}`);\r\n\r\n    dispatch({ type: FETCH_BOOK, payload: response.data });\r\n\r\n    dispatch(asyncActionFinish());\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchBooks = (title, firstBookIndex) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const { booksPerPage, totalBooks } = getState().pagination;\r\n\r\n  try {\r\n    dispatch(asyncActionStart());\r\n    const response = await googleBooks.get(\r\n      `/volumes?q=${title}&maxResults=${booksPerPage}&startIndex=${firstBookIndex}`\r\n    );\r\n\r\n    if (!response.data.items) {\r\n      throw new Error(\"Couldn't find more books\");\r\n    }\r\n     dispatch({ type: FETCH_BOOKS, payload: response.data.items });\r\n\r\n    let numOfBooks = totalBooks || response.data.totalItems;\r\n     dispatch({\r\n      type: UPDATE_PAGENATION,\r\n      payload: { totalBooks: numOfBooks, firstBookIndex: firstBookIndex }\r\n    });\r\n\r\n     dispatch({type: UPDATE_SEARCH, payload: title})\r\n\r\n    dispatch(asyncActionFinish());\r\n  } catch (error) {\r\n    dispatch(asyncActionError());\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchNextBooks = (title, firstBookIndex) => {\r\n  return fetchBooks(title, firstBookIndex);\r\n};\r\n\r\nexport const findBooks = title => {\r\n  return  fetchBooks(title, 0);\r\n};\r\n","import {ASYNC_ACTION_START, ASYNC_ACTION_FINISH, ASYNC_ACTION_ERROR} from './actionTypes';\r\n\r\n\r\nexport const asyncActionStart = () => {\r\n    return {\r\n      type: ASYNC_ACTION_START\r\n    };\r\n  };\r\n  \r\n  export const asyncActionFinish = () => {\r\n    return {\r\n      type: ASYNC_ACTION_FINISH\r\n    };\r\n  };\r\n  \r\n  export const asyncActionError = () => {\r\n    return {\r\n      type: ASYNC_ACTION_ERROR\r\n    };\r\n  };","export const FETCH_BOOKS = \"FETCH_BOOKS\";\r\n\r\nexport const FETCH_BOOK = \"FETCH_BOOK\";\r\n\r\nexport const UPDATE_PAGENATION = \"UPDATE_PAGENATION\";\r\n\r\nexport const ASYNC_ACTION_START = \"ASYNC_ACTION_START\";\r\nexport const ASYNC_ACTION_FINISH = \"ASYNC_ACTION_FINISH\";\r\nexport const ASYNC_ACTION_ERROR = \"ASYNC_ACTION_ERROR\";\r\n\r\nexport const UPDATE_SEARCH = \"UPDATE_SEARCH\";\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { findBooks } from \"../store/actions/booksActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.findBooks(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    const { term } = this.state;\r\n\r\n    return (\r\n      <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Search for books\"\r\n            aria-label=\"Search for books\"\r\n            aria-describedby=\"basic-addon2\"\r\n            value={term}\r\n            name=\"term\"\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button type=\"submit\" variant=\"outline-secondary\">\r\n              <FontAwesomeIcon icon={faSearch} />\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { books: state.books, searchTerm: state.searchTerm };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    findBooks: title => dispatch(findBooks(title))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport \"./App.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-img pt-5\">\r\n      <Row className=\"justify-content-center align-items-end h-25\">\r\n        <Col className=\"text-center\" md=\"8\" lg=\"8\" xs=\"12\">\r\n          <span className=\"header-text\">Discover your books</span>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"justify-content-center align-items-start\">\r\n        <Col md=\"8\" lg=\"8\" xs=\"12\">\r\n          <SearchBar />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nconst BookItem = ({ book }) => {\r\n  return (\r\n    <Card\r\n      as={NavLink}\r\n      to={`/books/${book.id}`}\r\n      style={{ height: \"330px\", backgroundColor: \" #ccedd2\" }}\r\n    >\r\n      <Card.Img\r\n        variant=\"top\"\r\n        src={book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail}\r\n        style={{ height: \"240px\" }}\r\n      />\r\n      <Card.Body style={{ overflow: \"hidden\" }}>\r\n        <small className=\"text-muted\">\r\n          By {book.volumeInfo.authors && book.volumeInfo.authors[0]}{\" \"}\r\n        </small>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default BookItem;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"pt-5\">\r\n      <Row className=\"justify-content-center align-items-end h-50\">\r\n        <Col className=\"text-center\" md=\"8\" lg=\"8\" xs=\"12\">\r\n          <Spinner animation=\"border\" variant=\"secondary\" />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchNextBooks } from \"../store/actions/booksActions\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport \"./App.css\";\r\n\r\nclass Pages extends React.Component {\r\n  handleSubmit = pageNumber => {\r\n    let nextBookIndex = (pageNumber - 1) * this.props.pagination.booksPerPage;\r\n\r\n    this.props.fetchNextBooks(this.props.searchTerm, nextBookIndex);\r\n  };\r\n\r\n  setPageNumbers = totalPages => {\r\n    const { currentPage, numberOfPages } = this.props.pagination;\r\n\r\n    let pageNumbers = [];\r\n\r\n    if (currentPage > Math.floor(numberOfPages / 2)) {\r\n      if (currentPage >= totalPages - Math.floor(numberOfPages / 2)) {\r\n        for (let i = numberOfPages; i > 0; i--) {\r\n          pageNumbers.push(totalPages - i + 1);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < numberOfPages; i++) {\r\n          pageNumbers.push(currentPage - Math.floor(numberOfPages / 2) + i);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < numberOfPages; i++) {\r\n        pageNumbers.push(i + 1);\r\n      }\r\n    }\r\n\r\n    return pageNumbers;\r\n  };\r\n\r\n  render() {\r\n    const { currentPage } = this.props.pagination;\r\n\r\n    const totalPages = Math.ceil(\r\n      this.props.pagination.totalBooks / this.props.pagination.booksPerPage\r\n    );\r\n\r\n    const pageNumbers = this.setPageNumbers(totalPages);\r\n\r\n    return (\r\n      <Pagination className=\"mt-5 justify-content-center \">\r\n        {/* <Pagination.First\r\n          disabled={currentPage === 1}\r\n          onClick={() => this.handleSubmit(1)}\r\n        /> */}\r\n        <Pagination.Prev\r\n          disabled={currentPage === 1}\r\n          onClick={() => this.handleSubmit(currentPage - 1)}\r\n        />\r\n\r\n        {pageNumbers.map(number => (\r\n          <Pagination.Item\r\n            key={number}\r\n            onClick={() => this.handleSubmit(number)}\r\n            className={currentPage === number ? \"active-page\" : \"\"}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        ))}\r\n        <Pagination.Next\r\n          disabled={currentPage === totalPages}\r\n          onClick={() => this.handleSubmit(currentPage + 1)}\r\n        />\r\n        {/* <Pagination.Last\r\n          disabled={currentPage === totalPages}\r\n          onClick={() => this.handleSubmit(totalPages)}\r\n        /> */}\r\n      </Pagination>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books,\r\n    pagination: state.pagination,\r\n    searchTerm: state.searchTerm\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchNextBooks: (title, nextBookIndex) =>\r\n      dispatch(fetchNextBooks(title, nextBookIndex))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pages);\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBooks } from \"../store/actions/booksActions\";\r\nimport BookItem from \"./BookItem\";\r\nimport Loading from \"./Loading\";\r\nimport Pages from \"./Pages\";\r\n\r\nclass BooksList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks(this.props.searchTerm, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.loading) return <Loading />;\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          {this.props.books.map(book => {\r\n            return (\r\n              <Col className=\"mt-4\" key={book.id} xs={6} lg={2} md={4} xl={2}>\r\n                <BookItem book={book} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <Pages />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    books: state.books,\r\n    loading: state.loading,\r\n    searchTerm: state.searchTerm\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBooks: (title, page) => dispatch(fetchBooks(title, page))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\r\n","import React, { Fragment } from \"react\";\r\nimport Header from \"./Header\";\r\nimport BooksList from \"./BooksList\";\r\nimport \"./App.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <BooksList />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport BookItem from \"./BookItem\";\r\nimport Loading from \"./Loading\";\r\nimport \"./App.css\";\r\n\r\nclass Favorites extends React.Component {\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let books = Object.entries(JSON.parse(localStorage.getItem(\"favorites\")));\r\n\r\n    this.setState({ books });\r\n  };\r\n\r\n  removeFromFavorites = id => {\r\n    // let books = Object.entries(JSON.parse(localStorage.getItem(\"favorites\")));\r\n\r\n    let books = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n    for (let key in books) {\r\n      if (key === id) delete books[key];\r\n    }\r\n\r\n    localStorage.setItem(\"favorites\", JSON.stringify(books));\r\n\r\n    this.setState({ books: Object.entries(books) });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.books.length === 0) return <Loading />;\r\n    return (\r\n      <Container style={{ height: \"100vh\" }}>\r\n        <Row>\r\n          {this.state.books.map(book => {\r\n            return (\r\n              <Col className=\"mt-5\" key={book[0]} xs={6} lg={2} md={4} xl={2}>\r\n                <BookItem book={book[1]} />\r\n                <FontAwesomeIcon\r\n                  className=\"close-icon\"\r\n                  icon={faTimes}\r\n                  onClick={() => this.removeFromFavorites(book[0])}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"pt-5\" style={{ height: \"100vh\", marginTop: \"5rem\" }}>\r\n      <Row className=\"justify-content-center align-items-end h-25\">\r\n        <Col className=\"text-center\" md=\"8\" lg=\"8\" xs=\"12\">\r\n          <FontAwesomeIcon icon={faSearch} style={{ fontSize: \"3rem\" }} />\r\n          <div className=\"details-title mt-4\">\r\n            Oops - We couldn't find this page\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\n\r\nconst Toastr = ({ type, text, show, handleToastrClose }) => {\r\n  return (\r\n    <div\r\n      aria-live=\"polite\"\r\n      aria-atomic=\"true\"\r\n      style={{\r\n        position: \"relative\",\r\n        minHeight: \"100px\"\r\n      }}\r\n    >\r\n      <Toast\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          right: 0\r\n        }}\r\n        onClose={handleToastrClose}\r\n        show={show}\r\n        delay={4000}\r\n        autohide\r\n      >\r\n        <Toast.Header style={{ backgroundColor: \"#7fcd91\" }}>\r\n          <strong className=\"mr-auto\" style={{ color: \"#332f2c\" }}>\r\n            {type}\r\n          </strong>\r\n        </Toast.Header>\r\n        <Toast.Body style={{ backgroundColor: \"#ccedd2\", color: \"#332f2c\" }}>\r\n          {text}\r\n        </Toast.Body>\r\n      </Toast>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toastr;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchBook } from \"../store/actions/booksActions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loading from \"./Loading\";\r\nimport NotFound from \"./NotFound\";\r\nimport Toastr from \"./Toastr\";\r\nimport \"./App.css\";\r\n\r\nclass BookDetails extends React.Component {\r\n  state = {\r\n    error: false,\r\n    showToastr: false\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.setState({ error: false });\r\n\r\n    const error = await this.props.fetchBook(this.props.id);\r\n\r\n    if (error) {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  saveToFavorites = () => {\r\n    // let map = {}\r\n    // localStorage.setItem(\"favorites\", JSON.stringify(map));\r\n    if (localStorage.getItem(\"favorites\") === null) {\r\n      let books = { [this.props.book.id]: this.props.book };\r\n      localStorage.setItem(\"favorites\", JSON.stringify(books));\r\n    } else {\r\n      let books = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n      if (!Object.keys(books).includes(this.props.book.id)) {\r\n        books = { ...books, [this.props.book.id]: this.props.book };\r\n        localStorage.setItem(\"favorites\", JSON.stringify(books));\r\n      }\r\n    }\r\n\r\n    this.setState({ showToastr: true });\r\n  };\r\n\r\n  renderAuthors = authors => {\r\n    let authorsList = \"\";\r\n    if (!authors || authors.length === 0) return authorsList;\r\n\r\n    authors.forEach(author => {\r\n      authorsList += \", \" + author;\r\n    });\r\n\r\n    return authorsList.substring(2);\r\n  };\r\n\r\n  handleToastrClose = () => {\r\n    this.setState({ showToastr: false });\r\n  };\r\n\r\n  render() {\r\n    const { book } = this.props;\r\n\r\n    if (this.state.error) return <NotFound />;\r\n    if (Object.entries(book).length === 0 || this.props.loading)\r\n      return <Loading />;\r\n\r\n    return (\r\n      <Container className=\"mt-5\" style={{ height: \"100vh\" }}>\r\n        <Card style={{ backgroundColor: \" #ccedd2\" }} mb={3}>\r\n          <Row className=\"no-gutters justify-content-center align-items-center\">\r\n            <Col\r\n              md={4}\r\n              sm={12}\r\n              className=\"text-center \"\r\n              style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n            >\r\n              <Card.Img\r\n                variant=\"top\"\r\n                style={{ width: \"150px\" }}\r\n                src={\r\n                  book.volumeInfo.imageLinks &&\r\n                  book.volumeInfo.imageLinks.thumbnail\r\n                }\r\n              />\r\n            </Col>\r\n            <Col md={8} sm={12}>\r\n              <Card.Body className=\"details-text\">\r\n                <Card.Title className=\"details-title\">\r\n                  {book.volumeInfo.title}\r\n                  <Button\r\n                    style={{\r\n                      float: \"right\",\r\n                      marginRight: \"5px\",\r\n                      backgroundColor: \"#7fcd91\"\r\n                    }}\r\n                    onClick={this.saveToFavorites}\r\n                  >\r\n                    <FontAwesomeIcon className=\"brand-logo\" icon={faStar} />\r\n                  </Button>\r\n                </Card.Title>\r\n\r\n                <Card.Text>\r\n                  By{\" \"}\r\n                  <span style={{ fontWeight: 600 }}>\r\n                    {book.volumeInfo &&\r\n                      this.renderAuthors(this.props.book.volumeInfo.authors)}\r\n                  </span>\r\n                </Card.Text>\r\n                <Card.Text>{book.volumeInfo.publishedDate}</Card.Text>\r\n                <Card.Text>{book.volumeInfo.description}</Card.Text>\r\n              </Card.Body>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n        <Toastr\r\n          type=\"Success\"\r\n          text=\"This book has been added to your favorites\"\r\n          show={this.state.showToastr}\r\n          handleToastrClose={this.handleToastrClose}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchBook: id => dispatch(fetchBook(id))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    book: state.currentBook,\r\n    loading: state.loading,\r\n    id: ownProps.match.params.id\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookDetails);\r\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport Home from \"./Home\";\nimport Favorites from \"./Favorites\";\nimport BookDetails from \"./BookDetails\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/favorites\" component={Favorites} />\n          <Route path=\"/books/:id\" component={BookDetails} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { UPDATE_PAGENATION } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  totalBooks: 0,\r\n  firstBookIndex: 0,\r\n  booksPerPage: 24,\r\n  currentPage: 1,\r\n  numberOfPages: 7\r\n};\r\n\r\nexport const paginationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PAGENATION:\r\n      return Object.assign({}, state, {\r\n        totalBooks: action.payload.totalBooks,\r\n        firstBookIndex: action.payload.firstBookIndex,\r\n        currentPage: action.payload.firstBookIndex / state.booksPerPage + 1\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { booksReducer, currentBookReducer } from \"./booksReducer\";\r\nimport { asyncReducer } from \"./asyncReducers\";\r\nimport { paginationReducer } from \"./paginationReducer\";\r\nimport { searchReducer } from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n  books: booksReducer,\r\n  pagination: paginationReducer,\r\n  currentBook: currentBookReducer,\r\n  loading: asyncReducer,\r\n  searchTerm: searchReducer\r\n});\r\n","import {\r\n  FETCH_BOOKS,\r\n  FETCH_BOOK,\r\n} from \"../actions/actionTypes\";\r\n\r\nexport const booksReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOOKS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentBookReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOOK:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {ASYNC_ACTION_START, ASYNC_ACTION_FINISH, ASYNC_ACTION_ERROR} from '../actions/actionTypes';\r\n\r\n\r\nexport const asyncReducer= (state=false, action ) => {\r\n\r\n    switch (action.type){\r\n        case ASYNC_ACTION_START:\r\n            return true;\r\n        case ASYNC_ACTION_FINISH:\r\n            return false;\r\n        case ASYNC_ACTION_ERROR:\r\n            return false;\r\n        default: \r\n            return state;\r\n    }\r\n}","import { UPDATE_SEARCH } from \"../actions/actionTypes\";\r\n\r\nexport const searchReducer = (state = \"popular\", action) => {\r\n\r\n  switch (action.type) {\r\n    case UPDATE_SEARCH:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './components/App.css';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './store/reducers/reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\n\nReactDOM.render(<Provider store={store}>\n    <App />\n\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}